<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Atlas200DK踩坑记之分设环境搭建</title>
      <link href="/posts/e08621db.html"/>
      <url>/posts/e08621db.html</url>
      
        <content type="html"><![CDATA[<h1 id="Atlas200DK踩坑记之分设环境搭建"><a href="#Atlas200DK踩坑记之分设环境搭建" class="headerlink" title="Atlas200DK踩坑记之分设环境搭建"></a>Atlas200DK踩坑记之分设环境搭建</h1><h2 id="0-写在前面"><a href="#0-写在前面" class="headerlink" title="0.写在前面"></a>0.写在前面</h2><p>&emsp;本篇内容主要是配置Atlas200DK开发和运行分设环境（在主机ubuntu18.04中搭建MindStudio和cann开发环境，在atals200DK开发者套件中安装运行环境）。注意分设环境是有别与合设环境的，请各位小伙伴明确自己的开发方式再进行环境搭建。<br>&emsp;最近在做华为开发板Atlas200DK的一些项目工作，在搭建开发环境和运行环境时，踩了许多坑，前前后后重装系统3次，这里仅以此篇，记录我的踩坑记，避免下次出现意外忘记如何操作，也给大家在开发时带来一些参考。</p><h2 id="1-ubuntu18-04系统安装"><a href="#1-ubuntu18-04系统安装" class="headerlink" title="1.ubuntu18.04系统安装"></a>1.ubuntu18.04系统安装</h2><p>&emsp;首先我们为什么要选用ubuntu18.04系统，是因为在<a href="https://www.hiascend.com/document/detail/zh/mindstudio/50RC3/releasenote/releasenote_000001.html">cann的用户手册</a>，CANN软件包支持的OS清单中Atlas200仅支持ubuntu18.04和ubuntu16.04版本，因此为了避免后续产生不必要的麻烦选用ubuntu18.04。<br>&emsp;由于我的电脑的显卡是NVIDIA的，在安装系统时发现直接选择Install ubuntu将会出现屏幕显示混乱或者进不了安装页面的现象，这时我们要在选择Install ubuntu界面选择到此选项，并点击’e’，进入edit mode，找到’quiet splash —‘将’—‘换成’nomodeset’。不难看出这应该是由于系统在选择显卡上出现了一些问题。<br>&emsp;在安装好系统后，第一次重启仍然会出现上述问题，重复上一步骤进入系统，再在终端下执行下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/default/grub</span><br><span class="line">//找到下面内容</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash nomodeset&quot;</span><br><span class="line">//将其替换为如下内容</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;nouveau.modeset=0&quot;</span><br><span class="line">//执行变更</span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><p>&emsp;然后我们需要注意网上许多安装ubuntu的教程中分配空间时会将根目录/的空间分配的很小，但是我们今后在ubuntu上所装的软件，不出意外大部分都是装在根目录下的，因此！！！墙裂建议将根目录/的空间尽可能分配大一些。<br>##2.配置开发环境<br>&emsp;由于本次教程是分设环境的搭建，因此我们将在pc机上安装开发环境。<br>###2.1下载MindStudio和CANN对应版本安装包<br>&emsp;版本的对应关系非常重要，<a href="https://www.hiascend.com/document/detail/zh/mindstudio/50RC3/releasenote/releasenote_000001.html">MindStudio的用户手册</a>上有个版本对应关系，我们要确定好MindStudio和CANN的版本，我这里选择的是MindStudio5.0.RC3，CANN6.0.RC1。直接点击进入下载。这里我们要在Ubuntu下下载，因此选择.tar.gz文件<br><img src="/pic/Snipaste_2023-03-20_10-53-44.png" alt="图片"><br>接着下载CANN6.0.RC1的arrch64架构的tookit和nnrt包。tookie是要在MindStudio上导入的开发环境工具包，而nnrt包是要安装在开发板上的运行环境包。<br><img src="/pic/Snipaste_2023-03-20_11-01-27.png" alt="图片2"><br>然后下载X86_64架构的tookit包<br><img src="/pic/Snipaste_2023-03-20_11-42-05.png" alt="图片3"><br>##2.2安装开发环境<br>为了方便省事我使用root用户安装在根目录下面，这就是为什么我强烈推荐多分配点空间给根目录。</p><ol><li>首先安装MindStudio，cd到安装包目录，打开root用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su - root</span><br><span class="line">//如果第一次进入root需要设置密码</span><br><span class="line">sudo passwd</span><br><span class="line">//然后输入三次设置密码</span><br><span class="line">//安装依赖环境</span><br><span class="line">sudo apt-get install -y gcc g++ make cmake zlib1g-dev libbz2-dev libsqlite3-dev libssl-dev libffi-dev unzip pciutils net-tools libblas-dev gfortran libblas3 liblapack-dev openssh-server xterm firefox xdg-utils libdbus-glib-1-dev gdb</span><br></pre></td></tr></table></figure></li><li>安装python3.7.5<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz</span><br><span class="line">//解压</span><br><span class="line">tar -zxvf Python-3.7.5.tgz</span><br><span class="line">//进入解压后的文件夹，执行配置、编译和安装命令：</span><br><span class="line">cd Python-3.7.5</span><br><span class="line">./configure --prefix=/usr/local/python3.7.5 --enable-loadable-sqlite-extensions --enable-shared</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li>设置python环境<br>输入命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>在最后一行将下面内容填入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#用于设置Python3.7.5库文件路径</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/python3.7.5/lib:$LD_LIBRARY_PATH</span><br><span class="line">#如果用户环境存在多个Python3版本，则指定使用python3.7.5版本</span><br><span class="line">export PATH=/usr/local/python3.7.5/bin:$PATH</span><br></pre></td></tr></table></figure>完成之后检查一下版本python3 –version<br>安装如下python依赖：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">pip3 install attrs</span><br><span class="line">pip3 install numpy</span><br><span class="line">pip3 install decorator</span><br><span class="line">pip3 install sympy</span><br><span class="line">pip3 install cffi</span><br><span class="line">pip3 install pyyaml</span><br><span class="line">pip3 install pathlib2</span><br><span class="line">pip3 install psutil</span><br><span class="line">pip3 install protobuf</span><br><span class="line">pip3 install scipy</span><br><span class="line">pip3 install requests</span><br><span class="line">pip3 install grpcio</span><br><span class="line">pip3 install pylint</span><br><span class="line">pip3 install absl-py</span><br></pre></td></tr></table></figure></li><li>安装MindStudio<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//&#123;version&#125;为自己对应的软件包版本</span><br><span class="line">tar -zxvf MindStudio_&#123;version&#125;_linux.tar.gz</span><br><span class="line">cd MindStudio/bin</span><br><span class="line">./MindStudio.sh</span><br></pre></td></tr></table></figure>&emsp;写到一半突然感觉自己写的太罗嗦了，这些其实在用户手册中都有，再结合<a href="https://zhanghui-china.blog.csdn.net/article/details/124611486">这个博主的文章</a>就可以了，那就再浅浅介绍记录一下自己踩的一些坑吧。<br>&emsp;首先下载<a href="https://gitee.com/ascend/samples.git">官方例程</a>时千万要注意不要像前面安装环境那样装在“/home/user/下载” 这个目录里面，不能出现中文，不然后面模型转换时无法加载模型文件。<br>&emsp;然后我们在运行例程时可能会需要一些其他的python包，我们打开终端用root用户装上即可。<br>&emsp;在最后我运行推理程序的时候出现了下面的错误<br><img src="/pic/QQ%E5%9B%BE%E7%89%8720230320123816.jpg" alt="图片4"><br>可以看到在MindStudio中发送的远程命令为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/HwHiAiUser/.../out</span><br><span class="line">/bin/bash ./main</span><br></pre></td></tr></table></figure>为什么是/bin/bash ./main？而不是直接./main？<br>对此我目前只能在终端中ssh远程连接然后手动cd到main的目录再执行./main。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在wsl2的ubuntu20.04中安装docker</title>
      <link href="/posts/4f324844.html"/>
      <url>/posts/4f324844.html</url>
      
        <content type="html"><![CDATA[<h1 id="wsl2下docker常用命令"><a href="#wsl2下docker常用命令" class="headerlink" title="wsl2下docker常用命令"></a>wsl2下docker常用命令</h1><p>帮助启动类命令：</p><ul><li>启动docker：sudo service docker start</li><li>停止docker：sudo service docker stop</li><li>重启docker：sudo service docker restart</li><li>查看docker状态：sudo service docker status</li><li>查看概要信息：sudo docker info</li><li>帮助：sudo docker help</li></ul><p>镜像命令：</p><ul><li>sudo docker search 某个镜像名字</li><li>sudo docker pull 某个镜像名字</li><li>sudo docker system df 查看镜像/容器/数据所占的空间</li><li>sudo docker rmi -f 强制删除image</li></ul><p>容器命令：</p><ul><li><p>新建+容器启动：</p><blockquote><p>sudo docker run -it ubuntu /bin/bash （i表示交互式启动，t表示终端，/bin/bash是shell）</p><p>sudo docker run -it –name=myu1 ubuntu bash （容器的名字–name）</p></blockquote></li><li><p>列出当前所有容器：sudo docker ps</p></li><li><p>退出容器：ctrl+p+q退出但不停止，exit退出停止</p></li><li><p>前台交互式启动：sudo docker run -d redis:6.0.8</p></li><li><p>查看容器日志：sudo docker log + 容器ID</p></li><li><p>查看容器内运行的进程：sudo docker top + 容器ID</p></li><li><p>查看容器内部细节：sudo docker inspect + 容器ID</p></li><li><p>重新进入正在后台运行的容器：sudo docker exec -it 容器ID /bin/bash</p></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> study </tag>
            
            <tag> docker </tag>
            
            <tag> wsl2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习</title>
      <link href="/posts/82d7ef45.html"/>
      <url>/posts/82d7ef45.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法学习"><a href="#Markdown基本语法学习" class="headerlink" title="Markdown基本语法学习"></a>Markdown基本语法学习</h1><h2 id="一、Markdown是什么？"><a href="#一、Markdown是什么？" class="headerlink" title="一、Markdown是什么？"></a>一、Markdown是什么？</h2><p>Markdown是一种用来快速编写文本的标记语言，通过简单的语法能使我们快速对文档进行编辑，并将其发布在自己的博客或者github上。</p><h2 id="二、怎么下载和使用"><a href="#二、怎么下载和使用" class="headerlink" title="二、怎么下载和使用"></a>二、怎么下载和使用</h2><p>我用的是<a href="https://typoraio.cn/">Typora</a>,是一款非常强大的Markdown编辑软件，可玩性极高。</p><h2 id="三、Markdown语法简介"><a href="#三、Markdown语法简介" class="headerlink" title="三、Markdown语法简介"></a>三、Markdown语法简介</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>使用#表示标题，其中<code>#</code>号必须在行首，一个<code>#</code>表示一级标题，两个<code>#</code>表示二级标题。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><h3 id="2-分割线"><a href="#2-分割线" class="headerlink" title="2.分割线"></a>2.分割线</h3><p>使用三个<code>-</code>也就是<code>---</code></p><hr><h3 id="3-斜体和粗体"><a href="#3-斜体和粗体" class="headerlink" title="3.斜体和粗体"></a>3.斜体和粗体</h3><p>使用<code>*</code>和<code>**</code>分别表示斜体或者粗体</p><h3 id="4-超链接和图片"><a href="#4-超链接和图片" class="headerlink" title="4.超链接和图片"></a>4.超链接和图片</h3><p>超链接是 ![文字描述] (链接) ，图片比超链接少一个 ！</p><h3 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a>5.引用</h3><p>使用<code>&gt;</code>实现</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;一级引用</span><br><span class="line">&gt;&gt;二级引用</span><br></pre></td></tr></table></figure><blockquote><p><code>&gt;&gt;</code>一级引用</p><blockquote><p><code>&gt;&gt;</code>二级引用</p></blockquote></blockquote><h3 id="6-目录"><a href="#6-目录" class="headerlink" title="6.目录"></a>6.目录</h3><p>在文章开头使用写入<code>[TOC]</code>即可</p><h3 id="7-代码段"><a href="#7-代码段" class="headerlink" title="7.代码段"></a>7.代码段</h3><p>输入如下代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;markdown</span><br><span class="line">代码输入</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>效果:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码输入</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> study </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
